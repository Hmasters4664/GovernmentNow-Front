[{"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\index.js":"1","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\reportWebVitals.js":"2","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\App.js":"3","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\home.jsx":"4","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\perscriptions.jsx":"5","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\upload.jsx":"6","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\profile.jsx":"7","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\conditions.jsx":"8","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\medicalvisits.jsx":"9","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\ticketlist.jsx":"10","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\logout.jsx":"11","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\login.jsx":"12","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\patient.jsx":"13","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\filter.jsx":"14","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\services\\dataservice.js":"15","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\filter.jsx":"16","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\Grid\\GridItem.js":"17","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\Grid\\GridContainer.js":"18","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\services\\tokenservice.ts":"19","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tablecontainer.jsx":"20","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\tablecontainer.jsx":"21","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\medical_visits_table.jsx":"22","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\full_perscription_table.jsx":"23","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\hospital_tables.jsx":"24","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\conditions_tables.jsx":"25","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\condition_table.jsx":"26","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\http.common.js":"27","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\ticketTable.jsx":"28","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\perscription_tables.jsx":"29","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\services\\history.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":4906,"mtime":1607747266297,"results":"34","hashOfConfig":"32"},{"size":3498,"mtime":1607719365338,"results":"35","hashOfConfig":"32"},{"size":6200,"mtime":1607719365354,"results":"36","hashOfConfig":"32"},{"size":4280,"mtime":1607745396124,"results":"37","hashOfConfig":"32"},{"size":7948,"mtime":1607719365354,"results":"38","hashOfConfig":"32"},{"size":2409,"mtime":1607719365332,"results":"39","hashOfConfig":"32"},{"size":2045,"mtime":1607719365354,"results":"40","hashOfConfig":"32"},{"size":2193,"mtime":1607745390398,"results":"41","hashOfConfig":"32"},{"size":391,"mtime":1607719365348,"results":"42","hashOfConfig":"32"},{"size":4561,"mtime":1607720362728,"results":"43","hashOfConfig":"32"},{"size":10382,"mtime":1607719365354,"results":"44","hashOfConfig":"32"},{"size":1312,"mtime":1607719365335,"results":"45","hashOfConfig":"32"},{"size":2255,"mtime":1607747266295,"results":"46","hashOfConfig":"32"},{"size":1312,"mtime":1607719365401,"results":"47","hashOfConfig":"32"},{"size":865,"mtime":1607719365329,"results":"48","hashOfConfig":"32"},{"size":813,"mtime":1607719365325,"results":"49","hashOfConfig":"32"},{"size":882,"mtime":1607719854318,"results":"50","hashOfConfig":"32"},{"size":2071,"mtime":1607719365385,"results":"51","hashOfConfig":"32"},{"size":2071,"mtime":1607719365401,"results":"52","hashOfConfig":"32"},{"size":2327,"mtime":1607719365401,"results":"53","hashOfConfig":"32"},{"size":2231,"mtime":1607719365401,"results":"54","hashOfConfig":"32"},{"size":665,"mtime":1607719365401,"results":"55","hashOfConfig":"32"},{"size":659,"mtime":1607719365385,"results":"56","hashOfConfig":"32"},{"size":2211,"mtime":1607719365385,"results":"57","hashOfConfig":"32"},{"size":1276,"mtime":1607745031097,"results":"58","hashOfConfig":"32"},{"size":1661,"mtime":1607744935165,"results":"59","hashOfConfig":"32"},{"size":1047,"mtime":1607719365401,"results":"60","hashOfConfig":"32"},{"size":87,"mtime":1607719465339,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1bynxnf",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"64"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\index.js",[],["142","143"],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\reportWebVitals.js",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\App.js",["144","145","146","147","148","149","150","151","152","153","154","155"],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\home.jsx",["156","157","158"],"import React, { Component, useEffect, useState } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport TokenStore from '../services/tokenservice';\r\nimport { Container } from \"reactstrap\"\r\nimport 'hammerjs';\r\nimport MedicalDataService from '../services/dataservice.js'\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button\r\n  } from 'reactstrap';\r\nimport \"./styling/home.css\"\r\n\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeSearchPerson = this.onChangeSearchPerson.bind(this);\r\n        this.clickPerson = this.clickPerson.bind(this);\r\n        this.searchPerson = this.searchPerson.bind(this);\r\n        \r\n        this.state = {\r\n          people: [],\r\n          currentIndex: -1,\r\n          currentPerson: null,\r\n          searchPerson: \"\"\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n\r\n        if (TokenStore.getToken() === null) {\r\n            this.props.history.push(\"/login\");\r\n            window.location.reload();\r\n          }\r\n          \r\n        \r\n      }\r\n      \r\n      clickPerson(id){\r\n\r\n        localStorage.setItem(\"PATIENT_ID\",id);\r\n        this.props.history.push(\"/medical\");\r\n            window.location.reload();\r\n\r\n      }\r\n\r\n      request(id){\r\n        MedicalDataService.request(id)\r\n          .then(response => {\r\n            console.log(response);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n\r\n      }\r\n\r\n      onChangeSearchPerson(e) {\r\n        const searchterm = e.target.value;\r\n    \r\n        this.setState({\r\n            searchPerson: searchterm\r\n        });\r\n      }\r\n    \r\n      searchPerson() {\r\n        MedicalDataService.search(this.state.searchPerson)\r\n          .then(response => {\r\n            this.setState({\r\n                people: response.data\r\n            });\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n\r\n      render(){\r\n          return(\r\n\r\n            <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n\r\n<div className=\"list row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search\"\r\n                value={this.state.searchPerson}\r\n                onChange={this.onChangeSearchPerson}\r\n              />\r\n              <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={this.searchPerson}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div> \r\n\r\n    {this.state.people.map((person, index) => (\r\n        <div style={{width: \"20%\"}}>\r\n        <Card >\r\n          <CardImg top width=\"80%\" src={person.picture_url} alt=\"Card image cap\" height=\"100px\" width=\"15px\"  />\r\n          <CardBody>\r\n    <CardTitle>{person.name}</CardTitle>\r\n    <CardSubtitle>ID:{person.identification_number}</CardSubtitle>\r\n    <CardText>Medical Aid:{person.medical_Aid}</CardText>\r\n            <Button onClick={(e) => this.request(person.id, e)}>Request Access</Button>\r\n            <Button onClick={(e) => this.clickPerson(person.id, e)}>Access</Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    ))}\r\n    </Container>\r\n\r\n          );\r\n      }\r\n\r\n\r\n\r\n}","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\perscriptions.jsx",["159","160","161","162","163","164","165","166","167","168","169","170"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Container } from \"reactstrap\"\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, DiscreteColorLegend, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalBarSeries} from 'react-vis';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport TokenStore from '../services/tokenservice';\r\nimport 'hammerjs';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport MedicalDataService from '../services/dataservice.js'\r\nimport {PerscriptionTable} from \"./tables/full_perscription_table\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n  export default class Perscriptions extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          perscriptions:[],\r\n          refill:[],\r\n          iss:[]\r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (TokenStore.getToken() === null) {\r\n            this.props.history.push(\"/login\");\r\n            window.location.reload();\r\n          }\r\n  \r\n          this.getInfo()\r\n          \r\n        \r\n      }\r\n\r\n      getInfo() {\r\n        MedicalDataService.perscription()\r\n        .then(response => {\r\n          this.setState({\r\n            perscriptions: response.data\r\n          });\r\n          //console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n\r\n      }\r\n\r\n      getData(id)\r\n      {\r\n        MedicalDataService.refill(id)\r\n        .then(response => {\r\n          this.setState({\r\n            refill: response.data,\r\n          });\r\n         // console.log(response.data.data);\r\n        })\r\n        .catch(e => {\r\n          \r\n          console.log(e);\r\n        });\r\n      }\r\n\r\n    \r\n\r\n      render() {\r\n        const columns1\r\n        = [\r\n         {\r\n             Header: () => null,\r\n             id: 'expander', // 'id' is required\r\n             Cell: ({ row }) => (\r\n               <span {...row.getToggleRowExpandedProps()}>\r\n                 {row.isExpanded ? '🔺' : '🔻'}\r\n               </span>\r\n             ),\r\n         },\r\n         \r\n         {\r\n         Header: 'Name', \r\n         accessor: 'name',\r\n         Filter: SelectColumnFilter,\r\n         filter: 'equals',\r\n         headerClassName: 'header',\r\n         },\r\n         { \r\n         Header: 'Size', \r\n         accessor: 'size',\r\n         headerClassName: 'header', \r\n         },\r\n         { \r\n          Header: 'Condition', \r\n          headerClassName: 'header',\r\n          accessor: 'condition' \r\n         },\r\n         {\r\n          Header: 'More Info', \r\n          headerClassName: 'header',\r\n         Cell: ({ row }) => (<button onClick={() => this.getData(`${row.original.id}`)}>More Info</button>)\r\n         }\r\n          \r\n         ]; \r\n\r\n\r\n         const columns2\r\n        = [   \r\n          {\r\n            Header: () => null,\r\n            id: 'expander', // 'id' is required\r\n            Cell: ({ row }) => (\r\n              <span {...row.getToggleRowExpandedProps()}>\r\n                {row.isExpanded ? '🔺' : '🔻'}\r\n              </span>\r\n            ),\r\n        },\r\n         {\r\n         Header: 'Name', \r\n         accessor: 'doctor.name',\r\n         Filter: SelectColumnFilter,\r\n         headerClassName: 'header',\r\n         },\r\n         { \r\n         Header: 'Contact', \r\n         accessor: 'doctor.contact',\r\n         headerClassName: 'header', \r\n         },\r\n         { \r\n             Header: 'Refill Date', \r\n             headerClassName: 'header',\r\n             accessor: 'date' \r\n        },\r\n         ]; \r\n\r\n\r\n\r\n         const renderRowSubComponent = (row) => {\r\n            const {\r\n              issuer,\r\n              notes\r\n            } = row.original;\r\n            return (\r\n              <div>\r\n              <Card style={{ width: '18rem', margin: '0 auto' }}>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <strong>Issuing medical practitioner</strong>\r\n                  </CardTitle>\r\n                  <CardText>\r\n                     {issuer.name} <br />\r\n                     registration: {issuer.reg_number} <br />\r\n                     contact: {issuer.contact} <br />\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <strong>Notes</strong>\r\n                  </CardTitle>\r\n                  <CardText>\r\n                    {notes}\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n            );\r\n          };\r\n\r\n\r\n          const renderRowSubComponentrefill = (row) => {\r\n            const {\r\n              notes\r\n            } = row.original;\r\n            return (\r\n              <div>\r\n              <Card style={{ width: '18rem', margin: '0 auto' }}>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <strong>Notes</strong>\r\n                  </CardTitle>\r\n                  <CardText>\r\n                    {notes}\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n            );\r\n          };\r\n\r\n\r\n        return (\r\n          <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n                <div className=\"row\">\r\n\r\n                <Container style={{ marginTop: 25 }}>\r\n                      <h2>Perscription</h2>\r\n                      <TableContainer columns={columns1} data={this.state.perscriptions}\r\n                        renderRowSubComponent={renderRowSubComponent} \r\n                      />\r\n                </Container>\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                <Container style={{ marginTop: 100 }}>\r\n                      <h2>Refill</h2>\r\n                        <TableContainer columns={columns2} data={this.state.refill} \r\n                        renderRowSubComponent={renderRowSubComponentrefill}\r\n                        />\r\n                </Container>\r\n\r\n                </div>\r\n\r\n        \r\n            </Container>\r\n        )\r\n      }\r\n\r\n\r\n\r\n  }","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\upload.jsx",["171","172","173","174","175","176","177","178","179","180","181","182"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Container } from \"reactstrap\"\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, DiscreteColorLegend, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalBarSeries} from 'react-vis';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport TokenStore from '../services/tokenservice';\r\nimport 'hammerjs';\r\nimport './styling/medicalrecords.css';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport MedicalDataService from '../services/dataservice.js'\r\nimport './styling/upload.css'\r\n\r\n\r\n\r\n\r\n\r\n  export default class Upload extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          images:[],\r\n          selectedFile: null,\r\n          notes: \"\"\r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (TokenStore.getToken() === null) {\r\n            this.props.history.push(\"/login\");\r\n            window.location.reload();\r\n          }  \r\n          this.img()    \r\n      }\r\n\r\n      img(){\r\n        MedicalDataService.images()\r\n        .then(response => {\r\n          this.setState({\r\n            images: response.data,\r\n          });\r\n          //console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }\r\n      onFileChange = event => { \r\n     \r\n      \r\n        this.setState({ selectedFile: event.target.files[0] }); \r\n       \r\n      }; \r\n\r\n      onTextChange = event => { \r\n     \r\n      \r\n        this.setState({ notes: event.target.value }); \r\n       \r\n      }; \r\n\r\n      onFileUpload = () => { \r\n\r\n        const formData = new FormData(); \r\n     \r\n      // Update the formData object \r\n      formData.append( \r\n        \"file\", \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name,\r\n        this.state.selectedFile.type,\r\n         \r\n      ); \r\n \r\n      MedicalDataService.upload(formData) .then(response => {\r\n        this.props.history.push(\"/medical\");\r\n        window.location.reload();\r\n        \r\n        \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n      \r\n\r\n      }\r\n\r\n\r\n      fileData = () => { \r\n     \r\n        if (this.state.selectedFile) { \r\n            \r\n          return ( \r\n            <div> \r\n              <h2>File Details:</h2> \r\n              <p>File Name: {this.state.selectedFile.name}</p> \r\n              <p>File Type: {this.state.selectedFile.type}</p> \r\n              <p> \r\n                Last Modified:{\" \"} \r\n                {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n              </p> \r\n            </div> \r\n          ); \r\n        } else { \r\n          return ( \r\n            <div> \r\n              <br /> \r\n              <h4>Choose before Pressing the Upload button</h4> \r\n            </div> \r\n          ); \r\n        } \r\n      }; \r\n\r\n      render() {\r\n        return (\r\n          <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n          <div>\r\n            <div className=\"content\">\r\n            <div className=\"grid\">\r\n            {this.state.images.map(imgs =>\r\n                <ActivityItemGrid url={imgs.url} date={imgs.date}\r\n                    notes={imgs.notes} \r\n                />\r\n            )}\r\n         \r\n            </div>\r\n            <Popup className=\"Actions\" trigger={<button> Upload</button>} modal>\r\n   \r\n                <input type=\"file\" onChange={this.onFileChange} /> \r\n                <input type=\"text\" onChange={this.onTextChange} /> \r\n                <button onClick={this.onFileUpload}> \r\n                  Upload! \r\n                </button> \r\n          \r\n          {this.fileData()}\r\n          </Popup> \r\n           \r\n        </div>\r\n      \r\n        </div>\r\n        </Container>\r\n        )\r\n      }\r\n\r\n  }\r\n\r\n  class ActivityItemGrid extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"grid\">\r\n                <div className=\"item\">\r\n                    <img src={this.props.url} />\r\n                    <p>\r\n                    {this.props.notes}\r\n                </p>\r\n                <span className=\"time\">\r\n                    {this.props.date}\r\n                </span>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\profile.jsx",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\conditions.jsx",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"import React, { Component, useEffect, useState } from 'react';\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, DiscreteColorLegend, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalBarSeries} from 'react-vis';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport TokenStore from '../services/tokenservice';\r\nimport 'hammerjs';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { Container } from \"reactstrap\"\r\nimport MedicalDataService from '../services/dataservice.js'\r\nimport {Conditions, Allergens} from \"./tables/condition_table\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n\r\n  export default class Condi extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          allergens:[],\r\n          conditions:[],\r\n         };\r\n        }\r\n\r\n        componentDidMount() {\r\n\r\n            if (TokenStore.getToken() === null) {\r\n                this.props.history.push(\"/login\");\r\n                window.location.reload();\r\n              }\r\n        \r\n              this.data()\r\n              \r\n            \r\n          }\r\n        \r\n          data() {\r\n            MedicalDataService.conditions()\r\n            .then(response => {\r\n              this.setState({\r\n                allergens: response.data.Allergens,\r\n                conditions: response.data.Conditions,\r\n              });\r\n              //console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        \r\n          }\r\n\r\n        render() {\r\n            return (\r\n              <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n                    <div className=\"row\">\r\n\r\n                    <Container style={{ marginTop: 25 }}>\r\n                        <h2>Medical Conditions</h2>\r\n                    <Conditions  data={this.state.conditions}\r\n                     />\r\n                    </Container>\r\n\r\n                </div>\r\n\r\n      <div className=\"row\">\r\n\r\n                <Container style={{ marginTop: 25 }}>\r\n                        <h2>Allergens</h2>\r\n                    <Allergens  data={this.state.allergens}\r\n                     />\r\n                    </Container>\r\n     \r\n    \r\n\r\n      </div>\r\n\r\n\r\n  </Container>\r\n            )\r\n        }\r\n\r\n  }","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\medicalvisits.jsx",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Container } from \"reactstrap\"\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, DiscreteColorLegend, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalBarSeries} from 'react-vis';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport TokenStore from '../services/tokenservice';\r\nimport 'hammerjs';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport MedicalDataService from '../services/dataservice.js'\r\nimport {Consultation, Hospital} from \"./tables/medical_visits_table\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n\r\n\r\n  export default class MedicalVisit extends Component{\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        hospital:[],\r\n        consultation:[],\r\n       };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (TokenStore.getToken() === null) {\r\n        this.props.history.push(\"/login\");\r\n        window.location.reload();\r\n      }\r\n\r\n      this.visits()\r\n      \r\n    \r\n  }\r\n\r\n  visits() {\r\n    MedicalDataService.visit()\r\n    .then(response => {\r\n      this.setState({\r\n        hospital: response.data.Hospital,\r\n        consultation: response.data.Consultation,\r\n      });\r\n      //console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n      <div className=\"row\">\r\n\r\n      <Container style={{ marginTop: 25 }}>\r\n            <h2>Consultation</h2>\r\n            <Consultation  data={this.state.consultation}\r\n            />\r\n      </Container>\r\n\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n      <Container style={{ marginTop: 100 }}>\r\n            <h2>Hospita Visits</h2>\r\n            <Hospital  data={this.state.hospital}\r\n            />\r\n      </Container>\r\n    \r\n\r\n      </div>\r\n\r\n\r\n  </Container>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  }","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\ticketlist.jsx",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Container } from \"reactstrap\"\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, DiscreteColorLegend, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalBarSeries} from 'react-vis';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport TokenStore from '../services/tokenservice';\r\nimport 'hammerjs';\r\nimport TableContainer from \"./tables/tablecontainer\"\r\nimport './styling/medicalrecords.css';\r\nimport MedicalDataService from '../services/dataservice.js'\r\nimport {PerscriptionTableLight} from \"./tables/perscription_tables\"\r\nimport {TicketTable } from \"./tables/ticketTable\"\r\nimport {ConditionsTableLight } from \"./tables/conditions_tables\"\r\nimport {HospitalTableLight } from \"./tables/hospital_tables\"\r\nimport { SelectColumnFilter } from './tables/filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n\r\n\r\nexport default class TicketList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          tickets:[],\r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (TokenStore.getToken() === null) {\r\n            this.props.history.push(\"/login\");\r\n            window.location.reload();\r\n          }\r\n  \r\n          this.retrieveAll()\r\n          \r\n        \r\n      }\r\n\r\n      retrieveAll() {\r\n        MedicalDataService.myTickets()\r\n        .then(response => {\r\n          this.setState({\r\n            tickets: response.data,\r\n          });\r\n          //console.log(response.data.Profile);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n\r\n \r\n\r\n\r\n\r\n    render() {\r\n         \r\n        return (\r\n          <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n            <div className=\"scrollable\">\r\n           \r\n                    <Container style={{ marginTop: 100 }}>\r\n                      <h2>Tickets</h2>\r\n                        <TicketTable data={this.state.tickets} \r\n                        />\r\n                    </Container>\r\n            </div>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\logout.jsx",["237"],"import React, { Component } from \"react\";\r\n\r\nexport default class LogOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        localStorage.removeItem(\"medic_token\");\r\n        this.props.history.push(\"/login\");\r\n        window.location.reload();\r\n      }\r\n\r\n      render() {\r\n        return (<h1>Redirecting</h1>)\r\n        }\r\n\r\n}","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\login.jsx",["238","239","240"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport MedicalDataService from \"../services/dataservice\";\r\nimport Input from '@material-ui/core/Input';\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Card from '@material-ui/core/Card';\r\nimport logo from '../logo.svg';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport GridContainer from \"./Grid/GridContainer\";\r\nimport GridItem from \"./Grid/GridItem\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { CardHeader, CardContent  } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport './styling/login.css'\r\n\r\n\r\n\r\nexport default class Login extends Component{\r\n  \r\n    constructor(props){\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.OnChangeUsername = this.OnChangeUsername.bind(this);\r\n        this.OnChangePassword = this.OnChangePassword.bind(this);\r\n        this.state = {\r\n          username: \"\",\r\n            password: \"\", \r\n            message: \"\",\r\n            loading: false\r\n          };\r\n    }\r\n    \r\n\r\n    OnChangeUsername(e){\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n    }\r\n\r\n    OnChangePassword(e){\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n    \r\n        this.setState({\r\n          message: \"\",\r\n          loading: true\r\n        });\r\n            var data = {\r\n              username: this.state.username,\r\n                password: this.state.password \r\n            };\r\n\r\n            MedicalDataService.login(data)\r\n            .then(() =>{\r\n               \r\n                this.props.history.push(\"/\");\r\n                window.location.reload();\r\n                },error =>{\r\n                    const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n                    \r\n                    \r\n                    this.setState({\r\n                        message: resMessage,\r\n                        loading: false\r\n                    });\r\n    \r\n                }\r\n    \r\n            );\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n          \r\n            <div className = \"background\">\r\n            <header\r\n    absolute\r\n    brand=\"Material Kit React\"\r\n    color=\"transparent\"\r\n  />\r\n            <div>\r\n    <div className = \"login-grid\">\r\n      <GridContainer justify=\"center\">\r\n        <GridItem xs={12} sm={12} md={4}>  \r\n\r\n      <Card>\r\n      <CardHeader  \r\n      avatar={<Avatar className = \"avatar\" alt=\"Remy Sharp\" src={logo} />} \r\n      title=\"GovernmentNow\"/>\r\n      <CardContent >\r\n      <Form\r\n          onSubmit={this.handleLogin}\r\n          ref={c => {\r\n          this.form = c;\r\n          }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <Input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            fullWidth\r\n            value={this.state.username}\r\n            onChange={this.OnChangeUsername}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <Input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.OnChangePassword}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <button\r\n            className=\"btn btn-primary btn-block\"\r\n            disabled={this.state.loading}\r\n          >\r\n            {this.state.loading && (\r\n              <span className=\"spinner-border spinner-border-sm\"></span>\r\n            )}\r\n            <span>Login</span>\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.message && (\r\n          <div className=\"form-group\">\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {this.state.message}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <CheckButton\r\n          style={{ display: \"none\" }}\r\n          ref={c => {\r\n            this.checkBtn = c;\r\n          }}\r\n        />\r\n        </Form>\r\n        </CardContent>\r\n      \r\n    </Card>\r\n    </GridItem>\r\n    </GridContainer>   \r\n    </div>\r\n    </div>\r\n  </div>\r\n    \r\n    );\r\n        \r\n      }\r\n    \r\n}","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\patient.jsx",["241","242","243","244","245","246","247","248","249","250","251","252"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport logo from '../logo.svg';\r\nimport { render } from '@testing-library/react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Login from \"./login\";\r\nimport { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\r\nimport { Container } from \"reactstrap\"\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, DiscreteColorLegend, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalBarSeries} from 'react-vis';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport TokenStore from '../services/tokenservice';\r\nimport 'hammerjs';\r\nimport MedicalDataService from '../services/dataservice.js'\r\n\r\n\r\n\r\n\r\nvar chdataPoints =[];\r\nvar chldldataPoints =[];\r\nvar trig =[];\r\nvar sysbldataPoints =[];\r\nvar diabldataPoints =[];\r\nvar bloodsugar =[];\r\nvar stepz = [];\r\nvar heart = [];\r\nexport default class Patient extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          allergens:[],\r\n          bloodpressure:[],\r\n          cholesterol:[],\r\n          perscriptions:[],\r\n          conditions:[],\r\n          heartR: [],\r\n          steps: [],\r\n          cholesterols:[{\r\n            title: \"HDL (good cholesterol)\",\r\n            disabled: false,\r\n            data: chdataPoints\r\n          },\r\n          {\r\n            title: \"LDL (Bad cholesterol)\",\r\n            disabled: false,\r\n            data: chldldataPoints\r\n          },\r\n        \r\n          {\r\n            title: \"Triglycerides\",\r\n            disabled: false,\r\n            data: trig\r\n          }],\r\n\r\n          blood:[{\r\n            title: \"systolic\",\r\n            disabled: false,\r\n            data: sysbldataPoints\r\n          },\r\n          {\r\n            title: \"diastolic\",\r\n            disabled: false,\r\n            data: diabldataPoints\r\n          },\r\n          {\r\n            title: \"Blood Sugar\",\r\n            disabled: false,\r\n            data: bloodsugar\r\n          }]\r\n         \r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n      if (TokenStore.getToken() === null) {\r\n          this.props.history.push(\"/login\");\r\n          window.location.reload();\r\n        }\r\n\r\n        this.retrieveAll()\r\n        \r\n      \r\n    }\r\n\r\n    retrieveAll() {\r\n      MedicalDataService.dashboard()\r\n        .then(response => {\r\n          this.setState({\r\n            allergens: response.data.Allergens,\r\n            bloodpressure: response.data.BloodPressure,\r\n            cholesterol: response.data.Cholesterol,\r\n            perscriptions: response.data.Perscriptions,\r\n            conditions:response.data.Conditions\r\n          });\r\n\r\n          \r\n\r\n          if(this.state.cholesterol.length>0)\r\n          {\r\n\r\n          for (var i = 0; i < this.state.cholesterol.length; i++) {\r\n            chdataPoints.push({\r\n              x: this.state.cholesterol[i].date_discovered,\r\n              y: this.state.cholesterol[i].hdl,\r\n            });\r\n\r\n            chldldataPoints.push({\r\n              x: this.state.cholesterol[i].date_discovered,\r\n              y: this.state.cholesterol[i].ldl,\r\n            });\r\n\r\n            trig.push({ \r\n              x: this.state.cholesterol[i].date_discovered,\r\n              y: this.state.cholesterol[i].triglycerides,\r\n            })\r\n\r\n            \r\n\r\n          }\r\n        }\r\n\r\n         \r\n          if(this.state.bloodpressure.length>0)\r\n          {\r\n\r\n          for (var i = 0; i < this.state.bloodpressure.length; i++) {\r\n            sysbldataPoints.push({\r\n              x: this.state.bloodpressure[i].date_discovered,\r\n              y: this.state.bloodpressure[i].systolic,\r\n            });\r\n\r\n            diabldataPoints.push({\r\n              x: this.state.bloodpressure[i].date_discovered,\r\n              y: this.state.bloodpressure[i].diastolic,\r\n            });\r\n\r\n            bloodsugar.push({\r\n              x: this.state.bloodpressure[i].date_discovered,\r\n              y: this.state.bloodpressure[i].bloodsugar,\r\n            });\r\n          }\r\n        }\r\n\r\n        if(response.data.Steps.length>0)\r\n        {\r\n\r\n        for (var i = 0; i < response.data.Steps.length; i++) {\r\n          stepz.push({\r\n            x: response.data.Steps[i].date_discovered,\r\n            y: response.data.Steps[i].count,\r\n          });\r\n        }\r\n      }\r\n\r\n      if(response.data.HeartRate.length>0)\r\n      {\r\n\r\n      for (var i = 0; i < response.data.HeartRate.length; i++) {\r\n        heart.push({\r\n          x: response.data.HeartRate[i].date_discovered,\r\n          y: response.data.HeartRate[i].bpm,\r\n        });\r\n      }\r\n    }\r\n    \r\n      \r\n      \r\n          \r\n\r\n          this.setState({\r\n\r\n            cholesterols:[{\r\n              title: \"HDL (good cholesterol)\",\r\n              disabled: false,\r\n              data: chdataPoints\r\n            },\r\n            {\r\n              title: \"LDL (Bad cholesterol)\",\r\n              disabled: false,\r\n              data: chldldataPoints\r\n            },\r\n          \r\n            {\r\n              title: \"Triglycerides\",\r\n              disabled: false,\r\n              data: trig\r\n            }\r\n          ],\r\n          blood:[{\r\n            title: \"systolic\",\r\n            disabled: false,\r\n            data: sysbldataPoints\r\n          },\r\n          {\r\n            title: \"diastolic\",\r\n            disabled: false,\r\n            data: diabldataPoints\r\n          },\r\n          {\r\n            title: \"Blood Sugar\",\r\n            disabled: false,\r\n            data: bloodsugar\r\n          }],\r\n\r\n          steps: stepz,\r\n          heartR: heart\r\n          });\r\n\r\n          \r\n          console.log(this.state.steps);\r\n\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n  \r\n        return (\r\n          <Container>\r\n\r\n<Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n          {/* row 1 - revenue */}\r\n          <Container className=\"row\" >\r\n          <Container className=\"col-md-6 mb-4\">\r\n              <Container className=\"card is-card-dark chart-card\">\r\n              <Container className=\"card-heading\">\r\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                  Cholesterol\r\n                  </Container>\r\n                  </Container>\r\n                <Container className=\"chart-container large full-height\">\r\n                <XYPlot height={300} width={400} xType=\"ordinal\">\r\n                <DiscreteColorLegend style={{position:'absolute',left:'50px', top:'10px'}}\r\n        \r\n        width={180}\r\n        items={this.state.cholesterols}\r\n      />\r\n                <HorizontalGridLines />\r\n                <VerticalGridLines />\r\n                <XAxis title=\"Date\"  />\r\n                <YAxis title=\"Cholesterol level (mg/dL)\"  />\r\n                <LineMarkSeries data={this.state.cholesterols[0].data} />\r\n                  <LineMarkSeries data={this.state.cholesterols[1].data} />\r\n                  <LineMarkSeries data={this.state.cholesterols[2].data} />\r\n          \r\n        </XYPlot>\r\n             \r\n                </Container>\r\n              </Container>\r\n            </Container>\r\n\r\n       \r\n\r\n            <Container className=\"col-md-6 mb-4\">\r\n              <Container className=\"card is-card-dark chart-card\">\r\n                <Container className=\"card-heading\">\r\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                    Blood Pressure\r\n                  </Container>\r\n                </Container>\r\n\r\n                <Container className=\"chart-container large full-height\">\r\n\r\n              <XYPlot height={300} width={500} xType=\"ordinal\">\r\n                <DiscreteColorLegend style={{position:'absolute',left:'50px', top:'10px'}}\r\n                width={180}\r\n                items={this.state.blood}\r\n                />\r\n                <HorizontalGridLines />\r\n                <VerticalGridLines />\r\n                <XAxis title=\"Date\"  />\r\n                <YAxis title=\"Blood Pressure (mm/Hg)\"  />\r\n                  <LineMarkSeries data={this.state.blood[0].data} />\r\n                  <LineMarkSeries data={this.state.blood[1].data} />\r\n                  <LineMarkSeries data={this.state.blood[2].data} />\r\n              </XYPlot>\r\n                  \r\n                \r\n                </Container>\r\n              </Container>\r\n            </Container>\r\n          </Container>\r\n\r\n          {/* row 2 - conversion */}\r\n          <Container className=\"row\">\r\n          <Container className=\"col-md-6 mb-4\">\r\n              <Container className=\"card is-card-dark chart-card\">\r\n                <Container className=\"card-heading\">\r\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                    Daily Steps\r\n                  </Container>\r\n                </Container>\r\n\r\n                <Container className=\"chart-container large full-height\">\r\n\r\n              <XYPlot margin={{left: 60, right: 20, top: 10, bottom: 30}}  height={300} width={400} xType=\"ordinal\">\r\n                <XAxis title=\"Date\"  />\r\n                <YAxis title=\"Steps\"  />\r\n                <VerticalBarSeries data={this.state.steps}  barWidth=\"0.001\" />\r\n                  \r\n              </XYPlot>\r\n                  \r\n                \r\n                </Container>\r\n              </Container>\r\n            </Container>\r\n\r\n\r\n            <Container className=\"col-md-6 mb-4\">\r\n              <Container className=\"card is-card-dark chart-card\">\r\n                <Container className=\"card-heading\">\r\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                   Resting Heart Rate\r\n                  </Container>\r\n                </Container>\r\n\r\n                <Container className=\"chart-container large full-height\">\r\n\r\n              <XYPlot margin={{left: 60, right: 20, top: 10, bottom: 30}}  height={300} width={400} xType=\"ordinal\">\r\n                <XAxis title=\"Date\"  />\r\n                <YAxis title=\"Heart Rate\"  />\r\n                <VerticalBarSeries data={this.state.heartR}  barWidth=\"0.001\" />\r\n                  \r\n              </XYPlot>\r\n                  \r\n                \r\n                </Container>\r\n              </Container>\r\n            </Container>\r\n\r\n          </Container>\r\n\r\n        \r\n        </Container>\r\n        </Container>\r\n\r\n\r\n      \r\n\r\n\r\n\r\n          \r\n\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\filter.jsx",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\services\\dataservice.js",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\filter.jsx",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\Grid\\GridItem.js",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\Grid\\GridContainer.js",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\services\\tokenservice.ts",["253","254"],"import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nexport class TokenStore{\r\n     private static  LOCAL_STORAGE_TOKEN = 'government_token';\r\n     private static  LOCAL_STORAGE_REFRESH_TOKEN = 'government_token';\r\n    \r\n\r\n      public static StoreAccessToken(token: string): void {\r\n          return localStorage.setItem(TokenStore.LOCAL_STORAGE_REFRESH_TOKEN,token);\r\n          \r\n     }\r\n\r\n     public static StoreRefreshToken(refreshtoken: string): void {\r\n          return localStorage.setItem(TokenStore.LOCAL_STORAGE_REFRESH_TOKEN,refreshtoken);\r\n     }\r\n\r\n     private static getRefreshToken(): string | null {\r\n          return localStorage.getItem(TokenStore.LOCAL_STORAGE_REFRESH_TOKEN);\r\n        }\r\n      \r\n     private static getToken(): string | null {\r\n          return localStorage.getItem(TokenStore.LOCAL_STORAGE_TOKEN);\r\n        }\r\n}\r\n\r\nexport default TokenStore;",["255","256"],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tablecontainer.jsx",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\tablecontainer.jsx",[],"C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\medical_visits_table.jsx",["257","258","259","260"],"import React, { Component, useEffect, useState } from 'react';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n\r\nconst cons_col\r\n= [\r\n  {\r\n    Header: () => null,\r\n    id: 'expander', // 'id' is required\r\n    Cell: ({ row }) => (\r\n      <span {...row.getToggleRowExpandedProps()}>\r\n        {row.isExpanded ? '🔺' : '🔻'}\r\n      </span>\r\n    ),\r\n},\r\n { \r\n     Header: 'Doctor', \r\n     headerClassName: 'header',\r\n     Filter: SelectColumnFilter,\r\n     filter: 'equals',\r\n     accessor: 'consultin_doctor.name' \r\n },\r\n { \r\n    Header: 'Contact', \r\n    headerClassName: 'header',\r\n    accessor: 'consultin_doctor.contact' \r\n},\r\n{ \r\n    Header: 'Reason',\r\n    accessor: 'reason',\r\n    headerClassName: 'header', \r\n    },\r\n ]; \r\n\r\n\r\n const hos_col\r\n= [\r\n  {\r\n    Header: () => null,\r\n    id: 'expander', // 'id' is required\r\n    Cell: ({ row }) => (\r\n      <span {...row.getToggleRowExpandedProps()}>\r\n        {row.isExpanded ? '🔺' : '🔻'}\r\n      </span>\r\n    ),\r\n},\r\n { \r\n     Header: 'Hospital', \r\n     Filter: SelectColumnFilter,\r\n     filter: 'equals',\r\n     headerClassName: 'header',\r\n     accessor: 'hospital' \r\n },\r\n { \r\n    Header: 'Hospital Contact', \r\n    headerClassName: 'header',\r\n    accessor: 'hospital_contact' \r\n},\r\n{ \r\n    Header: 'Duration', \r\n    accessor: 'duration',\r\n    headerClassName: 'header', \r\n    },\r\n    { \r\n      Header: 'Reason', \r\n      accessor: 'reason',\r\n      headerClassName: 'header', \r\n      },\r\n ]; \r\n\r\n\r\n\r\nconst cons = (row) => {\r\n    const {\r\n      notes\r\n    } = row.original;\r\n    return (\r\n      <div>\r\n      <Card style={{ width: '18rem', margin: '0 auto' }}>\r\n        <CardBody>\r\n          <CardTitle>\r\n            <strong>Notes</strong>\r\n          </CardTitle>\r\n          <CardText>\r\n            {notes}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n    );\r\n  };\r\n\r\n\r\n  export const Consultation = ({data}) => \r\n{\r\n    return (\r\n    <TableContainer columns={cons_col} data={data}\r\n    renderRowSubComponent={cons} />\r\n   ); \r\n};\r\n\r\n\r\nexport const Hospital = ({data}) => \r\n{\r\n    return (\r\n    <TableContainer columns={hos_col} data={data}\r\n    renderRowSubComponent={cons} />\r\n   ); \r\n};","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\full_perscription_table.jsx",["261","262","263","264","265"],"import React, { Component, useEffect, useState } from 'react';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n\r\nconst perscriptions_col\r\n    = [\r\n        {\r\n            Header: () => null,\r\n            id: 'expander', // 'id' is required\r\n            Cell: ({ row }) => (\r\n              <span {...row.getToggleRowExpandedProps()}>\r\n                {row.isExpanded ? '🔺' : '🔻'}\r\n              </span>\r\n            ),\r\n        },\r\n     {\r\n     Header: 'Name', \r\n     accessor: 'name',\r\n     Filter: SelectColumnFilter,\r\n     filter: 'equals',\r\n     headerClassName: 'header',\r\n     },\r\n     { \r\n     Header: 'Size', \r\n     accessor: 'size',\r\n     headerClassName: 'header', \r\n     },\r\n     { \r\n         Header: 'Condition', \r\n         headerClassName: 'header',\r\n         accessor: 'condition' \r\n     },\r\n     { \r\n       Header: 'Perscribing Doctor', \r\n       headerClassName: 'header',\r\n       accessor: 'issuer.name' \r\n       },\r\n\r\n       { \r\n         Header: 'Perscribing Doctor`s Contact', \r\n         headerClassName: 'header',\r\n         accessor: 'issuer.contact' \r\n         },\r\n\r\n         {\r\n            Header: 'More Info', \r\n            headerClassName: 'header',\r\n           Cell: ({ row }) => (<button onClick={() => this.getData(`${row.original.id}`)}>More Info</button>)\r\n           }\r\n    \r\n     ]; \r\n\r\n     const renderPerscriptionSubComponent = (row) => {\r\n        const {\r\n          issuer,\r\n          notes\r\n        } = row.original;\r\n        return (\r\n          <div>\r\n          <Card style={{ width: '18rem', margin: '0 auto' }}>\r\n            <CardBody>\r\n            <CardTitle>\r\n                <strong>Notes</strong>\r\n              </CardTitle>\r\n              <CardText>\r\n                {notes}\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        );\r\n      };\r\n\r\n     export const PerscriptionTable = ({data}) => \r\n     {\r\n         return (\r\n         <TableContainer columns={perscriptions_col} data={data}\r\n         renderRowSubComponent={renderPerscriptionSubComponent}/>\r\n        ); \r\n    };\r\n     ","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\hospital_tables.jsx",["266","267","268"],"import React, { Component, useEffect, useState } from 'react';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\n\r\nconst hospital_col\r\n= [\r\n {\r\n Header: 'Reason', \r\n accessor: 'reason',\r\n Filter: SelectColumnFilter,\r\n filter: 'equals',\r\n headerClassName: 'header',\r\n },\r\n { \r\n Header: 'Duration', \r\n accessor: 'duration',\r\n headerClassName: 'header', \r\n },{ \r\n     Header: 'Admission Date', \r\n     headerClassName: 'header',\r\n     accessor: 'admission_date' \r\n     }\r\n ]; \r\n\r\n\r\n\r\n\r\nexport const HospitalTableLight = ({data}) => \r\n{\r\n    return (\r\n    <TableContainer columns={hospital_col} data={data}/>\r\n   ); \r\n};","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\conditions_tables.jsx",["269","270","271"],"import React, { Component, useEffect, useState } from 'react';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\n\r\nconst conditions_col\r\n= [\r\n {\r\n Header: 'Name', \r\n accessor: 'name',\r\n Filter: SelectColumnFilter,\r\n filter: 'equals',\r\n headerClassName: 'header',\r\n },\r\n { \r\n Header: 'Type', \r\n accessor: 'type_name',\r\n headerClassName: 'header', \r\n },{ \r\n     Header: 'Date', \r\n     headerClassName: 'header',\r\n     accessor: 'date_discovered' \r\n     }\r\n ]; \r\n\r\n\r\n export const ConditionsTableLight = ({data}) => \r\n {\r\n     return (\r\n     <TableContainer columns={conditions_col} data={data}/>\r\n    ); \r\n};\r\n ","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\condition_table.jsx",["272","273","274","275"],"import React, { Component, useEffect, useState } from 'react';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n\r\nconst conditions_col\r\n= [\r\n  {\r\n    Header: () => null,\r\n    id: 'expander', // 'id' is required\r\n    Cell: ({ row }) => (\r\n      <span {...row.getToggleRowExpandedProps()}>\r\n        {row.isExpanded ? '🔺' : '🔻'}\r\n      </span>\r\n    ),\r\n},\r\n { \r\n     Header: 'Name', \r\n     headerClassName: 'header',\r\n     accessor: 'name' \r\n },\r\n { \r\n    Header: 'Type', \r\n    headerClassName: 'header',\r\n    Filter: SelectColumnFilter,\r\n    filter: 'equals',\r\n    accessor: 'type_name' \r\n},\r\n{ \r\n    Header: 'Date Discovered',\r\n    accessor: 'date_discovered',\r\n    headerClassName: 'header', \r\n    },\r\n ]; \r\n\r\n\r\n const all_col\r\n= [\r\n  {\r\n    Header: () => null,\r\n    id: 'expander', // 'id' is required\r\n    Cell: ({ row }) => (\r\n      <span {...row.getToggleRowExpandedProps()}>\r\n        {row.isExpanded ? '🔺' : '🔻'}\r\n      </span>\r\n    ),\r\n},\r\n { \r\n     Header: 'Name', \r\n     Filter: SelectColumnFilter,\r\n     filter: 'equals',\r\n     headerClassName: 'header',\r\n     accessor: 'name' \r\n },\r\n { \r\n    Header: 'Serverity', \r\n    headerClassName: 'header',\r\n    accessor: 'severity_name' \r\n},\r\n{ \r\n    Header: 'Date', \r\n    accessor: 'date_discovered',\r\n    headerClassName: 'header', \r\n    },\r\n ]; \r\n\r\n\r\n\r\nconst des = (row) => {\r\n    const {\r\n      description\r\n    } = row.original;\r\n    return (\r\n      <div>\r\n      <Card style={{ width: '18rem', margin: '0 auto' }}>\r\n        <CardBody>\r\n          <CardTitle>\r\n            <strong>Description</strong>\r\n          </CardTitle>\r\n          <CardText>\r\n            {description}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n    );\r\n  };\r\n\r\n\r\n  export const Conditions = ({data}) => \r\n{\r\n    return (\r\n    <TableContainer columns={conditions_col} data={data}\r\n    renderRowSubComponent={des} />\r\n   ); \r\n};\r\n\r\n\r\nexport const Allergens = ({data}) => \r\n{\r\n    return (\r\n    <TableContainer columns={all_col} data={data}\r\n    renderRowSubComponent={des} />\r\n   ); \r\n};","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\http.common.js",["276"],"import axios from 'axios';\r\nimport history from \"./services/history\";\r\nimport TokenStore from './services/tokenservice';\r\nconst authAxios = axios.create({\r\n    baseURL: \"http://localhost:8000\",\r\n    withCredentials:true,\r\n    Headers: {\r\n        \"Content-type\": \"application/json\",\r\n    }\r\n});\r\n\r\nauthAxios.interceptors.response.use(\r\n    function(response){\r\n        return response\r\n    },\r\n    error =>{\r\n        console.log(error)\r\n        const errorResponse = error.config\r\n        if (error.response.status === 401 && error.config && !error.config.__isRetryRequest) {\r\n            errorResponse.__retry = true;\r\n            history.push(\"/login\");\r\n            window.location.reload();\r\n          }\r\n\r\n          return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\n  function resetTokenAndReattemptRequest(error)\r\n  {\r\n    \r\n        axios.post('http://173.249.24.106:9090/api/token/refresh/',{refresh: TokenStore.getRefreshToken() }\r\n        ).then(response =>{\r\n            if (response.status === 200)\r\n            {\r\n                localStorage.setItem(\"token\",response.data.access);\r\n                return authAxios(error)\r\n            }else{\r\n                return Promise.reject(response)\r\n            \r\n            }\r\n        })\r\n}\r\n\r\nexport default authAxios\r\n\r\n\r\n  ","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\ticketTable.jsx",["277","278","279","280"],"import React, { Component, useEffect, useState } from 'react';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n  } from 'reactstrap';\r\n\r\n\r\n\r\nconst cols\r\n= [\r\n  {\r\n    Header: () => null,\r\n    id: 'expander', // 'id' is required\r\n    Cell: ({ row }) => (\r\n      <span {...row.getToggleRowExpandedProps()}>\r\n        {row.isExpanded ? '🔺' : '🔻'}\r\n      </span>\r\n    ),\r\n},\r\n { \r\n     Header: 'ID', \r\n     headerClassName: 'header',\r\n     accessor: 'id' \r\n },\r\n { \r\n    Header: 'Department', \r\n    Filter: SelectColumnFilter,\r\n    filter: 'equals',\r\n    headerClassName: 'header',\r\n    accessor: 'issue_name' \r\n},\r\n{ \r\n    Header: 'Province', \r\n    accessor: 'province',\r\n    headerClassName: 'header', \r\n    },\r\n    { \r\n      Header: 'City', \r\n      accessor: 'city',\r\n      headerClassName: 'header', \r\n      },\r\n\r\n      { \r\n        Header: 'Suburb', \r\n        accessor: 'suburb',\r\n        headerClassName: 'header', \r\n        },\r\n ]; \r\n\r\n\r\n const des = (row) => {\r\n    const {\r\n      description\r\n    } = row.original;\r\n    return (\r\n      <div>\r\n      <Card style={{ width: '18rem', margin: '0 auto' }}>\r\n        <CardBody>\r\n          <CardTitle>\r\n            <strong>Description</strong>\r\n          </CardTitle>\r\n          <CardText>\r\n            {description}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n    );\r\n  };\r\n\r\n\r\n  export const TicketTable = ({data}) => \r\n  {\r\n      return (\r\n      <TableContainer columns={cols} data={data}\r\n      renderRowSubComponent={des} />\r\n     ); \r\n  };\r\n  ","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\components\\tables\\perscription_tables.jsx",["281","282","283"],"import React, { Component, useEffect, useState } from 'react';\r\nimport TableContainer from \"./tablecontainer\"\r\nimport { SelectColumnFilter } from './filter.jsx';\r\n\r\nconst perscriptions_col\r\n    = [\r\n     {\r\n     Header: 'Name', \r\n     accessor: 'name',\r\n     Filter: SelectColumnFilter,\r\n     filter: 'equals',\r\n     headerClassName: 'header',\r\n     },\r\n     { \r\n     Header: 'Size', \r\n     accessor: 'size',\r\n     headerClassName: 'header', \r\n     },\r\n     { \r\n         Header: 'Condition', \r\n         headerClassName: 'header',\r\n         accessor: 'condition' \r\n     },\r\n     { \r\n       Header: 'Perscribing Doctor', \r\n       headerClassName: 'header',\r\n       accessor: 'issuer.name' \r\n       },\r\n\r\n       { \r\n         Header: 'Perscribing Doctor`s Contact', \r\n         headerClassName: 'header',\r\n         accessor: 'issuer.contact' \r\n         }\r\n    \r\n     ]; \r\n\r\n     export const PerscriptionTableLight = ({data}) => \r\n     {\r\n         return (\r\n         <TableContainer columns={perscriptions_col} data={data}/>\r\n        ); \r\n    };\r\n     ","C:\\Users\\hmasu\\GovernmentNow\\governmentnow\\src\\services\\history.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":12},{"ruleId":"288","severity":1,"message":"292","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":21},{"ruleId":"288","severity":1,"message":"293","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":14},{"ruleId":"288","severity":1,"message":"294","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":20},{"ruleId":"288","severity":1,"message":"295","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":14},{"ruleId":"288","severity":1,"message":"296","line":14,"column":8,"nodeType":"290","messageId":"291","endLine":14,"endColumn":13},{"ruleId":"288","severity":1,"message":"297","line":15,"column":35,"nodeType":"290","messageId":"291","endLine":15,"endColumn":39},{"ruleId":"288","severity":1,"message":"298","line":16,"column":19,"nodeType":"290","messageId":"291","endLine":16,"endColumn":25},{"ruleId":"288","severity":1,"message":"299","line":16,"column":27,"nodeType":"290","messageId":"291","endLine":16,"endColumn":30},{"ruleId":"288","severity":1,"message":"300","line":18,"column":23,"nodeType":"290","messageId":"291","endLine":18,"endColumn":34},{"ruleId":"288","severity":1,"message":"301","line":18,"column":36,"nodeType":"290","messageId":"291","endLine":18,"endColumn":52},{"ruleId":"288","severity":1,"message":"302","line":18,"column":54,"nodeType":"290","messageId":"291","endLine":18,"endColumn":70},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"305","severity":1,"message":"306","line":110,"column":97,"nodeType":"307","endLine":110,"endColumn":109},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"308","line":4,"column":9,"nodeType":"290","messageId":"291","endLine":4,"endColumn":15},{"ruleId":"288","severity":1,"message":"309","line":4,"column":17,"nodeType":"290","messageId":"291","endLine":4,"endColumn":36},{"ruleId":"288","severity":1,"message":"310","line":4,"column":38,"nodeType":"290","messageId":"291","endLine":4,"endColumn":43},{"ruleId":"288","severity":1,"message":"311","line":4,"column":45,"nodeType":"290","messageId":"291","endLine":4,"endColumn":50},{"ruleId":"288","severity":1,"message":"312","line":4,"column":52,"nodeType":"290","messageId":"291","endLine":4,"endColumn":71},{"ruleId":"288","severity":1,"message":"313","line":4,"column":73,"nodeType":"290","messageId":"291","endLine":4,"endColumn":90},{"ruleId":"288","severity":1,"message":"314","line":4,"column":92,"nodeType":"290","messageId":"291","endLine":4,"endColumn":106},{"ruleId":"288","severity":1,"message":"315","line":4,"column":108,"nodeType":"290","messageId":"291","endLine":4,"endColumn":125},{"ruleId":"288","severity":1,"message":"316","line":10,"column":9,"nodeType":"290","messageId":"291","endLine":10,"endColumn":26},{"ruleId":"288","severity":1,"message":"317","line":14,"column":5,"nodeType":"290","messageId":"291","endLine":14,"endColumn":12},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"308","line":4,"column":9,"nodeType":"290","messageId":"291","endLine":4,"endColumn":15},{"ruleId":"288","severity":1,"message":"309","line":4,"column":17,"nodeType":"290","messageId":"291","endLine":4,"endColumn":36},{"ruleId":"288","severity":1,"message":"310","line":4,"column":38,"nodeType":"290","messageId":"291","endLine":4,"endColumn":43},{"ruleId":"288","severity":1,"message":"311","line":4,"column":45,"nodeType":"290","messageId":"291","endLine":4,"endColumn":50},{"ruleId":"288","severity":1,"message":"312","line":4,"column":52,"nodeType":"290","messageId":"291","endLine":4,"endColumn":71},{"ruleId":"288","severity":1,"message":"313","line":4,"column":73,"nodeType":"290","messageId":"291","endLine":4,"endColumn":90},{"ruleId":"288","severity":1,"message":"314","line":4,"column":92,"nodeType":"290","messageId":"291","endLine":4,"endColumn":106},{"ruleId":"288","severity":1,"message":"315","line":4,"column":108,"nodeType":"290","messageId":"291","endLine":4,"endColumn":125},{"ruleId":"318","severity":1,"message":"319","line":76,"column":7,"nodeType":"320","messageId":"321","endLine":76,"endColumn":48,"fix":"322"},{"ruleId":"323","severity":1,"message":"324","line":153,"column":21,"nodeType":"325","endLine":153,"endColumn":49},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"308","line":3,"column":9,"nodeType":"290","messageId":"291","endLine":3,"endColumn":15},{"ruleId":"288","severity":1,"message":"309","line":3,"column":17,"nodeType":"290","messageId":"291","endLine":3,"endColumn":36},{"ruleId":"288","severity":1,"message":"310","line":3,"column":38,"nodeType":"290","messageId":"291","endLine":3,"endColumn":43},{"ruleId":"288","severity":1,"message":"311","line":3,"column":45,"nodeType":"290","messageId":"291","endLine":3,"endColumn":50},{"ruleId":"288","severity":1,"message":"312","line":3,"column":52,"nodeType":"290","messageId":"291","endLine":3,"endColumn":71},{"ruleId":"288","severity":1,"message":"313","line":3,"column":73,"nodeType":"290","messageId":"291","endLine":3,"endColumn":90},{"ruleId":"288","severity":1,"message":"314","line":3,"column":92,"nodeType":"290","messageId":"291","endLine":3,"endColumn":106},{"ruleId":"288","severity":1,"message":"315","line":3,"column":108,"nodeType":"290","messageId":"291","endLine":3,"endColumn":125},{"ruleId":"288","severity":1,"message":"326","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":22},{"ruleId":"288","severity":1,"message":"327","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":28},{"ruleId":"288","severity":1,"message":"328","line":13,"column":5,"nodeType":"290","messageId":"291","endLine":13,"endColumn":9},{"ruleId":"288","severity":1,"message":"317","line":14,"column":5,"nodeType":"290","messageId":"291","endLine":14,"endColumn":12},{"ruleId":"288","severity":1,"message":"329","line":15,"column":5,"nodeType":"290","messageId":"291","endLine":15,"endColumn":13},{"ruleId":"288","severity":1,"message":"330","line":16,"column":5,"nodeType":"290","messageId":"291","endLine":16,"endColumn":13},{"ruleId":"288","severity":1,"message":"331","line":17,"column":5,"nodeType":"290","messageId":"291","endLine":17,"endColumn":14},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"308","line":4,"column":9,"nodeType":"290","messageId":"291","endLine":4,"endColumn":15},{"ruleId":"288","severity":1,"message":"309","line":4,"column":17,"nodeType":"290","messageId":"291","endLine":4,"endColumn":36},{"ruleId":"288","severity":1,"message":"310","line":4,"column":38,"nodeType":"290","messageId":"291","endLine":4,"endColumn":43},{"ruleId":"288","severity":1,"message":"311","line":4,"column":45,"nodeType":"290","messageId":"291","endLine":4,"endColumn":50},{"ruleId":"288","severity":1,"message":"312","line":4,"column":52,"nodeType":"290","messageId":"291","endLine":4,"endColumn":71},{"ruleId":"288","severity":1,"message":"313","line":4,"column":73,"nodeType":"290","messageId":"291","endLine":4,"endColumn":90},{"ruleId":"288","severity":1,"message":"314","line":4,"column":92,"nodeType":"290","messageId":"291","endLine":4,"endColumn":106},{"ruleId":"288","severity":1,"message":"315","line":4,"column":108,"nodeType":"290","messageId":"291","endLine":4,"endColumn":125},{"ruleId":"288","severity":1,"message":"326","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":22},{"ruleId":"288","severity":1,"message":"327","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":28},{"ruleId":"288","severity":1,"message":"328","line":13,"column":5,"nodeType":"290","messageId":"291","endLine":13,"endColumn":9},{"ruleId":"288","severity":1,"message":"317","line":14,"column":5,"nodeType":"290","messageId":"291","endLine":14,"endColumn":12},{"ruleId":"288","severity":1,"message":"329","line":15,"column":5,"nodeType":"290","messageId":"291","endLine":15,"endColumn":13},{"ruleId":"288","severity":1,"message":"330","line":16,"column":5,"nodeType":"290","messageId":"291","endLine":16,"endColumn":13},{"ruleId":"288","severity":1,"message":"331","line":17,"column":5,"nodeType":"290","messageId":"291","endLine":17,"endColumn":14},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"308","line":4,"column":9,"nodeType":"290","messageId":"291","endLine":4,"endColumn":15},{"ruleId":"288","severity":1,"message":"309","line":4,"column":17,"nodeType":"290","messageId":"291","endLine":4,"endColumn":36},{"ruleId":"288","severity":1,"message":"310","line":4,"column":38,"nodeType":"290","messageId":"291","endLine":4,"endColumn":43},{"ruleId":"288","severity":1,"message":"311","line":4,"column":45,"nodeType":"290","messageId":"291","endLine":4,"endColumn":50},{"ruleId":"288","severity":1,"message":"312","line":4,"column":52,"nodeType":"290","messageId":"291","endLine":4,"endColumn":71},{"ruleId":"288","severity":1,"message":"313","line":4,"column":73,"nodeType":"290","messageId":"291","endLine":4,"endColumn":90},{"ruleId":"288","severity":1,"message":"314","line":4,"column":92,"nodeType":"290","messageId":"291","endLine":4,"endColumn":106},{"ruleId":"288","severity":1,"message":"315","line":4,"column":108,"nodeType":"290","messageId":"291","endLine":4,"endColumn":125},{"ruleId":"288","severity":1,"message":"326","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":22},{"ruleId":"288","severity":1,"message":"332","line":11,"column":9,"nodeType":"290","messageId":"291","endLine":11,"endColumn":31},{"ruleId":"288","severity":1,"message":"333","line":13,"column":9,"nodeType":"290","messageId":"291","endLine":13,"endColumn":29},{"ruleId":"288","severity":1,"message":"334","line":14,"column":9,"nodeType":"290","messageId":"291","endLine":14,"endColumn":27},{"ruleId":"288","severity":1,"message":"327","line":15,"column":10,"nodeType":"290","messageId":"291","endLine":15,"endColumn":28},{"ruleId":"288","severity":1,"message":"328","line":17,"column":5,"nodeType":"290","messageId":"291","endLine":17,"endColumn":9},{"ruleId":"288","severity":1,"message":"317","line":18,"column":5,"nodeType":"290","messageId":"291","endLine":18,"endColumn":12},{"ruleId":"288","severity":1,"message":"329","line":19,"column":5,"nodeType":"290","messageId":"291","endLine":19,"endColumn":13},{"ruleId":"288","severity":1,"message":"330","line":20,"column":5,"nodeType":"290","messageId":"291","endLine":20,"endColumn":13},{"ruleId":"288","severity":1,"message":"331","line":21,"column":5,"nodeType":"290","messageId":"291","endLine":21,"endColumn":14},{"ruleId":"335","severity":1,"message":"336","line":4,"column":5,"nodeType":"337","messageId":"338","endLine":6,"endColumn":6},{"ruleId":"288","severity":1,"message":"339","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":17},{"ruleId":"288","severity":1,"message":"340","line":13,"column":10,"nodeType":"290","messageId":"291","endLine":13,"endColumn":20},{"ruleId":"288","severity":1,"message":"341","line":14,"column":10,"nodeType":"290","messageId":"291","endLine":14,"endColumn":20},{"ruleId":"288","severity":1,"message":"342","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":12},{"ruleId":"288","severity":1,"message":"343","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":16},{"ruleId":"288","severity":1,"message":"293","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":14},{"ruleId":"288","severity":1,"message":"344","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":13},{"ruleId":"288","severity":1,"message":"345","line":7,"column":27,"nodeType":"290","messageId":"291","endLine":7,"endColumn":33},{"ruleId":"288","severity":1,"message":"297","line":7,"column":35,"nodeType":"290","messageId":"291","endLine":7,"endColumn":39},{"ruleId":"288","severity":1,"message":"346","line":7,"column":41,"nodeType":"290","messageId":"291","endLine":7,"endColumn":47},{"ruleId":"288","severity":1,"message":"347","line":7,"column":49,"nodeType":"290","messageId":"291","endLine":7,"endColumn":54},{"ruleId":"348","severity":1,"message":"349","line":127,"column":20,"nodeType":"290","messageId":"350","endLine":127,"endColumn":21},{"ruleId":"348","severity":1,"message":"349","line":148,"column":18,"nodeType":"290","messageId":"350","endLine":148,"endColumn":19},{"ruleId":"348","severity":1,"message":"349","line":159,"column":16,"nodeType":"290","messageId":"350","endLine":159,"endColumn":17},{"ruleId":"351","severity":1,"message":"352","line":1,"column":8,"nodeType":"290","messageId":"291","endLine":1,"endColumn":13},{"ruleId":"351","severity":1,"message":"353","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":35},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"317","line":6,"column":5,"nodeType":"290","messageId":"291","endLine":6,"endColumn":12},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"317","line":6,"column":5,"nodeType":"290","messageId":"291","endLine":6,"endColumn":12},{"ruleId":"288","severity":1,"message":"355","line":63,"column":11,"nodeType":"290","messageId":"291","endLine":63,"endColumn":17},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"317","line":6,"column":5,"nodeType":"290","messageId":"291","endLine":6,"endColumn":12},{"ruleId":"288","severity":1,"message":"356","line":30,"column":12,"nodeType":"290","messageId":"291","endLine":30,"endColumn":41},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},{"ruleId":"288","severity":1,"message":"317","line":6,"column":5,"nodeType":"290","messageId":"291","endLine":6,"endColumn":12},{"ruleId":"288","severity":1,"message":"354","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"304","line":1,"column":39,"nodeType":"290","messageId":"291","endLine":1,"endColumn":47},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Perscriptions' is defined but never used.","'Navbar' is defined but never used.","'MedicalVisit' is defined but never used.","'Avatar' is defined but never used.","'Condi' is defined but never used.","'Link' is defined but never used.","'Toggle' is defined but never used.","'Nav' is defined but never used.","'faClipboard' is defined but never used.","'faClipboardCheck' is defined but never used.","'faHospitalSymbol' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'XYPlot' is defined but never used.","'DiscreteColorLegend' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'HorizontalGridLines' is defined but never used.","'VerticalGridLines' is defined but never used.","'LineMarkSeries' is defined but never used.","'VerticalBarSeries' is defined but never used.","'PerscriptionTable' is defined but never used.","'CardImg' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"359","text":"360"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TableContainer' is defined but never used.","'SelectColumnFilter' is defined but never used.","'Card' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'PerscriptionTableLight' is defined but never used.","'ConditionsTableLight' is defined but never used.","'HospitalTableLight' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CardMedia' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","'ReactDOM' is defined but never used.","'render' is defined but never used.","'Login' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","@typescript-eslint/no-unused-vars","'axios' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'Component' is defined but never used.","'issuer' is assigned a value but never used.","'resetTokenAndReattemptRequest' is defined but never used.","no-global-assign","no-unsafe-negation",[1962,1964],"."]